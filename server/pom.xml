<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>faraway</artifactId>
        <groupId>com.sboot.study</groupId>
        <version>1.0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>server</artifactId>
    <!-- 以上是自动生成 -->

    <!-- 指定打包方式 -->
    <packaging>jar</packaging>

    <!-- 对所有依赖版本号进行管理 -->
    <properties>
        <springboot.version>2.1.0.RELEASE</springboot.version>
        <mysql.version>8.0.13</mysql.version>
        <hutool.version>4.1.19</hutool.version>
        <lombok.version>1.16.20</lombok.version>
        <swagger.version>2.6.1</swagger.version>
        <devtools.version>2.0.4.RELEASE</devtools.version>
        <druid.version>1.1.12</druid.version>
        <junit.version>4.12</junit.version>
        <qiniu.version>[7.2.0, 7.2.99]</qiniu.version><!--表示每次去获取最新版本-->
        <httpclient.version>4.5.6</httpclient.version>
        <json.version>2.4</json.version>
    </properties>


    <!-- 我们在使用时也不必控制依赖的版本，Spring Boot提供了默认的版本进行管理，
         在我们升级Spring Boot的版本时，这些依赖的版本也会进行更新！-->
    <!-- 方式一：继承Spring Boot的提供的父工程，该方式一般用于单一模块 -->
    <!--<parent>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-starter-parent</artifactId>-->
        <!--<version>2.1.0.RELEASE</version>-->
    <!--</parent>-->
    <!-- 方式二： 通过scope=import的方式引入
         在很多时候我们需要继承自有的父工程或由于其他设置无法使用Spring Boot提供的父工程。
         此时可以通过scope=import的方式进行引入 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springboot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <!-- 项目依赖 -->
    <dependencies>
        <!-- springboot主依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <!-- springboot测试依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- 邮件 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <!-- 模板引擎 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- springboot-web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${springboot.version}</version>
        </dependency>

        <!--依赖平级模块-->
        <dependency>
            <groupId>com.sboot.study</groupId>
            <artifactId>model</artifactId>
            <version>${parent.version}</version>
        </dependency>

        <!--mysql-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>

        <!-- 国产优秀的工具类 -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

        <!-- swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <!-- swagger官方UI界面 http://localhost:9098/faraway/swagger-ui.html-->
        <!-- 依赖google的guava工具类 -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>

        <!-- 热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <version>${devtools.version}</version>
        </dependency>

        <!--阿里巴巴数据库连接池druid-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>

        <!-- 单元测试 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>

        <!-- 七牛 -->
        <dependency>
            <groupId>com.qiniu</groupId>
            <artifactId>qiniu-java-sdk</artifactId>
            <version>${qiniu.version}</version>
        </dependency>

        <!-- http跨域请求(业务代码模拟http请求) 构建HttpClientUtils工具类开始 -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>${json.version}</version>
            <classifier>jdk15</classifier><!--不加这个报错-->
        </dependency>
        <!-- 构建HttpClientUtils工具类开始结束 -->
    </dependencies>

    <build>
        <!--spring boot打包插件-->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>-Dfile.encoding=UTF-8</jvmArguments>
                    <mainClass>com.sboot.study.ServerApplication</mainClass>
                    <executable>true</executable>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>